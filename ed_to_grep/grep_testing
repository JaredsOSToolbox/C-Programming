#!/usr/bin/env zsh

# This script was used to test the functionality of the source file along the way through development

function succ_(){
  # Checking how many lines both source files had
  echo "[+] BUILD SUCCEEDED!: ($(tail -n1 warning_error_logs.txt))"
  echo "[+] Number of non blank lines: $(cat "src/grep.c" "includes/grep.h"	|  sed '/^\s*#/d;/^\s*$/d' | wc -l)"
}

function err_(){
  # The build had failed in some way, it gives the output of clang, piped to less and can be searched using vim keybindings
  echo "[-] BUILD FAILED"
  cat warning_error_logs.txt | less
  exit
}

function testing_with_files_(){
  # this was testing the functionality of ed while stripping out components of the editior itself, making sure its integrity was still intact
  build_input="src/grep.c"
  build_input_name="$build_input:t:r"

  echo "[+] Building "$build_input" from source...."

  clang -v -Wall -Wextra -lm -g "$build_input" -o "$build_input_name" 2> warning_error_logs.txt && succ_ || err_

  cp "$target" ""$name"_cloned"
  target=""$name"_cloned"

  echo "[+] Contents of $target: "
  cat "$target"
  echo -e ",s/this/replaced/g\n,s/^yes/line/g\nw\nq" | ./"$build_input_name" "$target"

  echo "[+] Contents of $target after replacement (this --> replaced | ^yes --> line): "
  cat "$target"

  echo -e ",s/^line/LINE/g\nw\nq" | ./"$build_input_name" "$target"
  echo "[+] Contents of $target after beginning line replacement (^line --> LINE):"
  cat "$target"

  echo -e ",s/l.*e/out/g\nw\nq" | ./"$build_input_name" "$target"
  echo "[+] Contents of $target after star line replacement (l.*e --> weirdness):"
  cat "$target"
  
  rm "$target"
}

function testing_with_arguments_(){
  echo "[+] Building grep from source...."
  clang -lm -g "src/grep.c" -o output 2> warning_error_logs.txt && succ_ || err_
  echo "[+] Running tests for grep_...."
  ./output "^yes" ./input.txt 
  ./output "^NO" ./input.txt another.txt
  ./output "\$container" ./input.txt another.txt
}
testing_with_arguments_
